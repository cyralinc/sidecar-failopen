---
  Description: "Creates ASG with Specified Min, Max, and desired capacity in each specified subnet"

  Parameters:
    AsgMax:
      Description: "The maximum number of hosts to create in the auto scaling group"
      Type: "String"
      Default: "2"
      AllowedPattern: "[0-9]+"
    AsgMin:
      Description: "The minimum number of hosts to create in the auto autoscaling group"
      Type: "String"
      Default: "1"
      AllowedPattern: "[0-9]+"
    AsgDesired:
      Description: "The desired number of hosts to create in the auto scaling group"
      Type: "String"
      Default: "1"
      AllowedPattern: "[0-9]+"
    Subnets:
      Type: List<AWS::EC2::Subnet::Id>
      Description: "The subnets the EC2 instances will be deployed to. All subnets must be able to reach both the sidecar and the repository."
    SSHKeyName:
      Type: AWS::EC2::KeyPair::KeyName
      Description: Name of an existing EC2 KeyPair to enable SSH access to the EC2 instances.
      Default: AWS_Key
    InstanceType:
      AllowedValues:
        [t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, m5.large, m5.xlarge, c5.large, c5.xlarge, r5.large, r5.xlarge]
      Default: t3.medium
      Description: Amazon EC2 instance type for the EC2 instances
      Type: String
    InstanceSecurityGroup:
      Description: "List of Security Group IDs"
      Type: List<AWS::EC2::SecurityGroup::Id>
    AmiId:
      Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
      Description: "Amazon Linux 2 AMI ID for sidecar EC2 instances. The default behavior is to use the latest version.
        In order to define a new image, replace 'recommended' by the desired image name (eg 'amzn2-ami-ecs-hvm-2.0.20181112-x86_64-ebs')."
      Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    SidecarHost:
      Description: "Domain name of the sidecar load balancer."
      Type: String
    SideCarDomainName:
      Description: "top level domain for the sidecar"
      Type: String
    SidecarNamePrefix:
      Type: String
      Description: "Name prefix of the sidecar. This parameter is used to identify the elements of this stack and also the events created during runtime."
    RepoHost:
      Description: "Full Snowflake Domain name"
      Type: String
    SnowFlakeAccountName:
      Description: "Account name for the snowflake instance"
      Type: String

  Resources:
    LaunchConfig:
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties:
        KeyName:
          Ref: SSHKeyName
        ImageId: !Ref AmiId
        SecurityGroups:
          Ref: "InstanceSecurityGroup"
        InstanceType:
          Ref: "InstanceType"
#        LaunchConfigurationName: !Join ['-', [!Ref SidecarNamePrefix, SnowflakeFailOpen]]
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            
            yum update -y
            amazon-linux-extras enable nginx1
            yum install -y nginx

            function gen_site_conf() {
              sudo bash -c "cat > /etc/nginx/conf.d/$1.conf" << EOF
              server {
                      root /var/www/html;
                      server_name $1;
                      location / {
                              if (\$is_browser = "1") {
                                  add_header X-Deny-Reason "Redirecting to snowflake";
                                  return 302 https://$2/;
                              }
                              proxy_pass https://$2/;
                      }
                  
                      listen 443;
                      listen [::]:443;
              }
            EOF
            }

            function gen_bi_site_conf() {
              sudo bash -c "cat > /etc/nginx/conf.d/$1.conf" << EOF
              server {
                      root /var/www/html;
                      server_name $1;
                      location / {
                              proxy_pass https://$2/;
                      }

                      listen 443;
                      listen [::]:443;
              }
            EOF
            }

            # Add new nginx variable
            sed -i '/^http /a\    map \$http_user_agent \$is_browser {\n        default "0";\n        "~^Mozilla" "1";\n    }' /etc/nginx/nginx.conf

            # Change the default nginx port on the default server to 8888 for healthchecks
            sed -i 's/80;/8888;/' /etc/nginx/nginx.conf

            # Create the entry for sidecar domain
            gen_site_conf ${SidecarHost} ${RepoHost}
            # Create the entry for the snowflake domain for tableau users
            gen_bi_site_conf ${SnowFlakeAccountName}.${SideCarDomainName} ${RepoHost}

            systemctl enable nginx
            systemctl start nginx

    AutoScalingGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      DependsOn: LaunchConfig
      Properties:
        AutoScalingGroupName: !Join ['-', [!Ref SidecarNamePrefix, snowflake,failopen,AutoScalingGroup"]]
        Cooldown: 120
        DesiredCapacity:
          Ref: AsgDesired
        LaunchConfigurationName: !Ref LaunchConfig
        MaxSize:
          Ref: AsgMax
        MinSize:
          Ref: AsgMin
        Tags:
          - Key: Name
            Value: !Join ['-', [!Ref SidecarNamePrefix, snowflake, failopen, ASG]]
            PropagateAtLaunch: 'true'
          - Key: "Stack"
            Value: !Ref "AWS::StackName"
            PropagateAtLaunch: 'true'
        VPCZoneIdentifier:
          Ref: Subnets
  AWSTemplateFormatVersion: "2010-09-09"
